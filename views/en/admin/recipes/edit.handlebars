<br>
<div class="container">
    <div class="outer-card z-depth-2 blue lighten-100">
        <h5 class="white-text center">Update Recipe</h5>
        <form class="white">
            <div class="row">
                <div class="input-field col s12 l6">
                    <input id="title" name="title" type="text" class="validate" value="{{data.title}}" required>
                    <label for="title">Title</label>
                </div>
                <div class="input-field col s12 l6">
                    <select id="category">
                        {{#select data.category}}
                        <option value="" disabled selected>Choose the Category</option>
                        <option value="breakfast">Breakfast</option>
                        <option value="entrees">Entrees</option>
                        <option value="desserts">Desserts</option>
                        <option value="drinks">Drinks</option>
                        <option value="snacks">Snacks</option>
                        <option value="salads">Salads</option>
                        {{/select}}
                    </select>
                    <label>Category</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <input id="tags" name="tags" type="text" class="validate" placeholder="Example: banana, nuts, drink, soda, lettuce, ..." value="{{#each data.tags}}{{this}}{{#unless @last}},&nbsp;{{/unless}}{{/each}}">
                    <label for="tags">Tags</label>
                </div>
            </div>

            <div class="row insert-ingredients-here">
                <!-- Ingredients get added here dynamically through Javascript -->
                {{#each data.ingredients}}
                <div id="ingredient-object-{{@index}}" class="col s12 m6 l4 ingredients">
                    <div class="row">
                        <div class="input-field col s12">
                            <input id="item-{{@index}}" type="text" class="validate" placeholder="Ex: almonds" value="{{item}}" required>
                            <label for="item-{{@index}}">Item</label>
                        </div>
                        <div class="input-field col s12">
                            <input id="unit-{{@index}}" type="text" class="validate" placeholder="Ex: cup" value="{{unit}}" required>
                            <label for="unit-{{@index}}">Unit</label>
                        </div>
                        <div class="input-field col s12">
                            <input id="quantity-{{@index}}" type="number" class="validate" placeholder="Ex: 2.5" value="{{quantity}}" required>
                            <label for="quantity-{{@index}}">Quantity</label>
                        </div>
                        <div class="center">
                            <button id="remove-ingredient-{{@index}}-btn" class="red btn waves-effect waves-light remove-ingredient" type="button" name="action" onclick="RemoveIngredient(this.id)">
                                <i class="material-icons">delete</i>
                            </button>
                        </div>
                    </div>
                </div>
                {{/each}}
            </div>

            <!-- Add Ingredient Button -->
            <p>Add the ingredients for your recipe!</p>
            <div class="add-ingredient-spacing">
                <button id="add-ingredient-btn" class="btn waves-effect waves-light" type="button" name="action">
                    Add
                    <i class="material-icons right">add</i>
                </button>
            </div>

            <div class="row">
                <div class="input-field col s12">
                    <textarea id="description" class="materialize-textarea" placeholder="" required>{{data.description}}</textarea>
                    <label for="description">Description</label>
                </div>
            </div>

            <!-- File Upload -->
            <div class="file-field input-field">
                <div class="btn">
                    <span>File</span>
                    <input id="imageFiles" name="photos[]" type="file" multiple>
                </div>
                <div class="file-path-wrapper">
                    <input class="file-path validate" type="text" placeholder="Upload one or more images">
                </div>
            </div>

            <!-- photos/images as chips -->
            <div class="chips-section">
                {{#each data.imageURLs}}
                    <div class="chip current-imageURLs"><span class="the-image-string">{{this}}</span><i class="close material-icons">close</i></div>
                {{/each}}
            </div>
            <br>

            <div class="row">
                <div class="input-field col s12">
                    <textarea id="textarea2" class="materialize-textarea" placeholder="Example: Toppings include mixed nuts with some honey glaze!" required>{{data.additionalNotes}}</textarea>
                    <label for="textarea2">Additional Notes</label>
                </div>
            </div>

            <!-- Submit Button -->
            <button id="update-recipe-btn" class="btn waves-effect waves-light" type="submit" name="update-recipe-btn">
                Update
                <i class="material-icons right">update</i>
            </button>

            <button id="delete-this-recipe-btn" class="btn waves-effect waves-light red" type="button" name="delete-this-recipe-btn">
                Delete
                <i class="material-icons right">delete</i>
            </button>
        </form>
    </div>
</div>
<div class="this-div"></div>

<!-- Modal Structure 1 -->
<div id="modal1" class="modal">
    <div class="modal-content">
        <h4>Wait! Looks like you left something empty!</h4>
        <p>The following were not filled in:</p>
        <ul id="listOfNeglected" class="browser-default"></ul>
        <p>Are you sure you want to continue?</p>
    </div>
    <div class="modal-footer">
        <a id="send-anyway-btn" href="" class="modal-action modal-close waves-effect btn-flat">Submit Anyway</a>
        <a id="close-modal-btn" href="" class="modal-action modal-close waves-effect btn-flat">Go Back</a>
    </div>
</div>

<!-- Modal Structure 2 -->
<div id="delete-recipe-modal" class="modal">
    <div class="modal-content">
        <h4>Are you sure you want to delete this recipe?</h4>
        <p>If you decide to delete this recipe it will permanently be lost. Are you sure you want to continue?</p>
        <p>
            <input type="checkbox" id="confirm-remove-associated-photos" class="filled-in">
            <label for="confirm-remove-associated-photos">
                Check this box if you also want to permanently delete the photos associated with this recipe.
                <br>
                <b>Note</b>: if you delete the photos then you will not be able to recover them.
            </label>
        </p>
    </div>
    <div class="modal-footer">
        <a id="confirm-delete-btn" href="" class="modal-action modal-close waves-effect btn-flat">Yes, delete.</a>
        <a id="close-modal-2-btn" href="" class="modal-action modal-close waves-effect btn-flat">No</a>
    </div>
</div>

<style>
    .mask {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: fixed;
        background-color: black;
        z-index: 5000;
        background-color: black;
        opacity: 0.5;
    }

    .outer-card {
        width: 300px;
        padding: 20px;
        margin: 0 auto;
    }

        .outer-card form {
            padding-top: 10px;
            padding-left: 10px;
            padding-right: 10px;
            padding-bottom: 40px;
            padding: 10px 30px 40px 30px;
        }

    .remove-ingredient {
        padding-left: 15px;
        padding-right: 15px;
    }

    .add-ingredient-spacing {
        margin-bottom: 20px;
    }

    /* small */
    @media (min-width: 768px) {
    }

    /* medium */
    @media (min-width: 992px) {
    }

    /* desktop */
    @media (min-width: 1200px) {
        .outer-card {
            width: 100%;
        }
    }
</style>

<script>
    $(document).ready(function() {
        var ingredientCounter = {{data.ingredients.length}};

        $('select').material_select();
        $('.modal').modal();

        $('#delete-this-recipe-btn').click(function() {
            $('#delete-recipe-modal').modal('open');
        });

        $('#add-ingredient-btn').click(function() {
            $('.insert-ingredients-here').append(
                '<div id="ingredient-object-'+ ingredientCounter +'" class="col s12 m6 l4 ingredients">' +
                    '<div class="row">' +
                        '<div class="input-field col s12">' +
                            '<input id="item-'+ ingredientCounter +'" type="text" class="validate" placeholder="Ex: almonds" required>' +
                            '<label for="item-'+ ingredientCounter +'">Item</label>' +
                        '</div>' +
                        '<div class="input-field col s12">' +
                            '<input id="unit-'+ ingredientCounter +'" type="text" class="validate" placeholder="Ex: cup" required>' +
                            '<label for="unit-'+ ingredientCounter +'">Unit</label>' +
                        '</div>' +
                        '<div class="input-field col s12">' +
                            '<input id="quantity-'+ ingredientCounter +'" type="number" class="validate" placeholder="Ex: 2.5" required>' +
                            '<label for="quantity-'+ ingredientCounter +'">Quantity</label>' +
                        '</div>' +
                        '<div class="center">' +
                            '<button id="remove-ingredient-'+ ingredientCounter +'-btn" class="red btn waves-effect waves-light remove-ingredient" type="button" name="action" onclick="RemoveIngredient(this.id)">' +
                                '<i class="material-icons center">delete</i>' +
                            '</button>' +
                        '</div>' +
                    '</div>' +
                '</div>'
            );
            $('#item-'+ingredientCounter).focus().blur();
            $('#unit-'+ingredientCounter).focus().blur();
            $('#quantity-'+ingredientCounter).focus().blur();
            ++ingredientCounter;
        });

        $('#update-recipe-btn').click(function(e) {
            e.preventDefault();

            var tagsArr = $('#tags').val().split('-');
            if($('#tags').val() === '')
                tagsArr = [];

            // form data for photos/images
            var imageStrings = [];
            $('.chips-section').children('.current-imageURLs').each(function() {
                var fileName = $(this).children('.the-image-string').html();
                imageStrings.push(fileName);
            });
            
            var files = document.getElementById('imageFiles').files;
            var formData = new FormData();
            for(var i = 0; i < files.length; ++i) {
                var file = files[i];
                if(!file.type.match('image.*'))
                    continue;

                formData.append('photos[]', file, file.name);
                imageStrings.push(file.name);
            }

            // ingredients
            var ingredients = [];
            $('.insert-ingredients-here').children('.ingredients').each(function() {
                var idNum = (this.id).split('-')[2];
                ingredients.push({
                    item: $(this).find('#item-'+idNum).val(),
                    unit: $(this).find('#unit-'+idNum).val(),
                    quantity: $(this).find('#quantity-'+idNum).val()
                });
            });

            var recipeObject = {
                title: $('#title').val(),
                category: $('#category').val(),
                tags: tagsArr,
                imageURLs: imageStrings,
                ingredients: ingredients,
                description: $('#description').val(),
                additionalNotes: $('#textarea2').val()
            };

            // check for empty fields
            if(!$('#title').val() || !$('#category').val() || !$('#tags').val()  || !$('#description').val()) {
                $('#modal1').modal('open');
                PopulateModalList($('#title').val(),
                    $('#category').val(),
                    $('#tags').val(),
                    $('#description').val());
                $('#send-anyway-btn').click(function(e) {
                    e.preventDefault();
                    SendRequestObjects(recipeObject, formData, files.length);
                    $('#modal1').modal('close');
                });
            } else {
                SendRequestObjects(recipeObject, formData, files.length);
            }
        });

        $('#confirm-delete-btn').click(function(e) {
            e.preventDefault();
            DeleteRecipeFromDatabase();
            var alsoDeletePhotos = $('#confirm-remove-associated-photos').is(':checked');
            if(alsoDeletePhotos) {
                var imageStrings = [];
                $('.chips-section').children('.current-imageURLs').each(function() {
                    var fileName = $(this).children('.the-image-string').html();
                    imageStrings.push(fileName);
                });
            
                var files = document.getElementById('imageFiles').files;
                for(var i = 0; i < files.length; ++i) {
                    var file = files[i];
                    if(!file.type.match('image.*'))
                        continue;

                    imageStrings.push(file.name);
                }
                DeletePhotosFromDatabase(0, imageStrings);
            }
        });

        $('#close-modal-btn').click(function(e) {
            e.preventDefault();
            $('#modal1').modal('close');
        });

        $('#close-modal-2-btn').click(function(e) {
            e.preventDefault();
            $('#delete-recipe-modal').modal('close');
        });
    });

    function RemoveIngredient(id) {
        var idNumberArr = id.split('-');
        var idNumber = idNumberArr[2];
        $('#ingredient-object-' + idNumber).remove();
    }

    function PopulateModalList(title, category, tags, description) {
        $('#listOfNeglected').html('');
        if(!title)       { $('#listOfNeglected').append('<li>Title</li>'); }
        if(!category)    { $('#listOfNeglected').append('<li>Category</li>'); }
        if(!tags)        { $('#listOfNeglected').append('<li>Tags</li>'); }
        if(!description) { $('#listOfNeglected').append('<li>Description</li>'); }
    }
    
    function SendRequestObjects(recipeObject, formData, length) {
        $.ajax({
            method: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify(recipeObject),
            url: '/admin/recipes?id='+(window.location.search).split('=')[1]
        }).done(function() {
            var subject = window.location.pathname.split('/')[3];
            Materialize.toast('Recipe Update Succesful!', 4000, 'green');
            Materialize.toast('Redirecting to '+ subject +' dashboard in&nbsp;<span id="timer">3<span>', 4000, 'blue');
            Timer(3, subject);
        }).fail(function(jqXHR, textStatus, errorThrown) {
            var statusCode = (jqXHR.status.toString()).split('');
            var statusText = jqXHR.statusText;
            if(statusCode[0] === 5 || statusText.match(/Internal Server Error/)) {
                // server-side error - contact pablo
                Materialize.toast('Server-side Error. Contact Pablo if problem persists.', 5000, 'red');
            } else if(statusCode[0] === 4 || statusText.match(/Bad Request/)) {
                // client-side error - try again in a few moments
                Materialize.toast('Failed to Upload Recipe!<br>Try again in a few moments.', 5000, 'red');
            }
        });

        if(length > 0) {
            var word = length > 1 ? 'Photos' : 'Photo';
            $.ajax({
                method: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                url: '/admin/photos/upload'
            }).done(function(data) {
                Materialize.toast(word + ' Upload Succesful!', 4000, 'green');
            }).fail(function(jqXHR, textStatus, errorThrown) {
                var statusCode = (jqXHR.status.toString()).split('');
                var statusText = jqXHR.statusText;
                if(statusCode[0] === 5 || statusText.match(/Internal Server Error/)) {
                    // server-side error - contact pablo
                    Materialize.toast('Server-side Error. Contact Pablo if problem persists.', 5000, 'red');
                } else if(statusCode[0] === 4 || statusText.match(/Bad Request/)) {
                    // client-side error - try again in a few moments
                    Materialize.toast('Failed to Upload '+word+'!<br>Try again in a few moments.', 5000, 'red');
                }
            });
        }
    }

    function DeleteRecipeFromDatabase() {
        var id = window.location.search.split('=')[1];
        $.ajax({
            method: 'DELETE',
            url: '/admin/recipes?id=' + id
        }).done(function(data) {
            Materialize.toast('Successfully deleted recipe', 5000, 'green');
        }).fail(function(jqXHR, textStatus, errorThrown) {
            var statusCode = (jqXHR.status.toString()).split('');
                var statusText = jqXHR.statusText;
                if(statusCode[0] === 5 || statusText.match(/Internal Server Error/)) {
                    // server-side error - contact pablo
                    Materialize.toast('Server-side Error - Was not able to delete. Contact Pablo if problem persists.', 5000, 'red');
                } else if(statusCode[0] === 4 || statusText.match(/Bad Request/)) {
                    // client-side error - try again in a few moments
                    Materialize.toast('Failed to Delete Recipe!<br>Try again momentarily.', 5000, 'red');
                }
        });
    }

    function DeletePhotosFromDatabase(index, imageURLs) {
        var length = imageURLs.length;
        $.ajax({
            method: 'DELETE',
            url: '/admin/photos?name='+imageURLs[index]
        }).done(function(filename) {
            Materialize.toast('Successfully deleted ' + filename, 5000, 'green');
        }).fail(function(filename) {
            Materialize.toast('Failed to delete ' + filename.responseText, 5000, 'red');
        });
        if(++index < length) {
            DeletePhotosFromDatabase(index, imageURLs);
        }
        return;
    }

    function Timer(duration, subject) {
        setInterval(function() {
            console.log(duration);
            if(--duration < 0)
                window.location.href = '/en/admin/' + subject;
            $('#timer').html(duration);
        }, 1000, duration);
    }
</script>